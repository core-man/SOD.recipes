<?xml version="1.0"?>
<!-- ****************************************************************
* SOD recipe used to download continous seismic waveforms.
*
* History
*  2019        Jiayuan Yao  Initial coding
*
*  If you'd like to use different subsetters in eventArm, networkArm, waveformArm,
*  please refer to the following websites:
*  1. http://www.seis.sc.edu/sod/ingredients/index.html
*  2. https://github.com/seisman/SODrecipes
*****************************************************************-->
<sod>
    <!--   Event Arm   -->
    <eventArm>
        <!-- eventSource subsetters -->
        <!-- use periodicFakeEventSource -->
        <periodicFakeEventSource>
            <startTime>20190620T00:00:00Z</startTime>
            <interval>
                <unit>DAY</unit>
                <value>1</value>
            </interval>
            <numEvents>3</numEvents>
        </periodicFakeEventSource>
        <CSVEventPrinter/>
        <CSVEventPrinter>  <!-- save fake events to a csv file -->
            <filename>events-fake.csv</filename>
        </CSVEventPrinter>

        <!-- origin subsetters -->
    	<printlineEventProcess/>
    </eventArm>


    <!--   Network Arm   -->
    <networkArm>
        <!-- networkSource subsetters -->
        <!-- I use fdsnStation, whose default is IRIS-DMC FDSN station web service -->
        <fdsnStation/>

        <!-- network subsetters -->
        <networkOR>
            <networkCode>MM</networkCode>
            <networkCode>TM</networkCode>
        </networkOR>

        <!-- station subsetters -->
        <stationOR>
            <stationCode>HKA</stationCode>
            <stationCode>KTA</stationCode>
            <stationCode>KTN</stationCode>
            <stationCode>MDY</stationCode>
            <stationCode>NGU</stationCode>
            <stationCode>SIM</stationCode>
            <stationCode>TGI</stationCode>
            <stationCode>TMU</stationCode>
            <stationCode>YGN</stationCode>
            <stationCode>CMAI</stationCode>
            <stationCode>CMMT</stationCode>
            <stationCode>CRAI</stationCode>
            <stationCode>MHIT</stationCode>
            <stationCode>PBKT</stationCode>
        </stationOR>

        <!-- channel subsetters -->
        <channelOR>
            <channelCode>H??</channelCode>
            <channelCode>B??</channelCode>
        </channelOR>
        <sacPoleZeroWriter/>  <!-- print channel poles and zeros to file -->
        <responseWriter/>     <!-- print channel responeses to file -->
    	<printlineChannelProcess/>
    </networkArm>


    <!--   Waveform Arm   -->
    <waveformArm>
        <!-- eventStation subsetters -->

        <!-- eventChannel subsetters -->
        <bestChannelAtStation/>  <!-- pick the best channel at a station -->

        <!-- requestGenerator subsetters -->
        <originOffsetRequest>
            <beginOffset>
                <unit>MINUTE</unit>
                <value>0</value>
            </beginOffset>
            <endOffset>
                <unit>MINUTE</unit>
                <value>1440</value>
            </endOffset>
        </originOffsetRequest>

        <!-- request subsetters -->

        <!-- seismogramSource subsetters -->
        <!-- I use fdsnDataSelect, whose default is IRIS-DMC FDSN dataselect web service -->
        <fdsnDataSelect/>

        <!-- availableData subsetters -->
        <someCoverage/>


        <!-- ****************************************************
              The following are all seismogramProcess subsetters
             **************************************************** -->
        <!-- checks after asking for the seismograms that they really exist. -->
        <someDataCoverage/>

        <!-- merge, deal with overlap and gap -->
        <merge/>
        <collapseOverlaps/>
        <!--gapFill>
            <zeroFill/>
        </gapFill>
        <noDataGaps/-->

        <!-- basic data processing -->
        <!--rMean/>
        <rTrend/>
        <taper/-->

        <!-- write miniseed -->
        <mseedWriter>
            <workingDir>miniseed</workingDir>
            <location>${event.getTime("yyyyMMddHHmmssSSS")}/${network.code}.${station.code}.${site.code}.${channel.code}.mseed</location>
        </mseedWriter>
    	<printlineSeismogramProcess/>
    	<legacyExecute>
            <command>echo Sod saved this file</command>
    	</legacyExecute>
  	</waveformArm>
</sod>
